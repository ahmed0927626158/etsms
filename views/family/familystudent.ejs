
<!doctype html>
<html lang="en">
 <%- include('../partials/header'); -%>
  <body>
<div class="wrapper">
	<div class="body-overlay"></div>
	 <!-------sidebar--design------------>
     <%- include('../partials/sidebar'); -%>
	 
   <!-------sidebar--design- close-----------
   
   
      <!-------page-content start----------->
   
      <div id="content">
		  <!------top-navbar-start-----------> 
			<%- include('../partials/topnav'); -%>
<section class="content-header">
    <ol class="breadcrumb">

    </ol>
</section>

<!-- Main content -->
<section class="content container-fluid">
    <div class="class-row" style="display: flex; flex-direction: row;">
        <div class="col-sm-4 col-xs-12 mt-12">

            
            <form name="fam_stud_link" id="fam_stud_link">
            <div id="add_family_box">
                <div class="box ">
                    <div class="box-header bg-success text-white text-center py-1">
                        <h4>Select family</h4>
                
                    </div>
              <div class="box-body">    
                <div id="family_select"  name="family_select">
                    
                
                </div>
                 </div>
                </div>
                </div>

                <hr>
             
             <div id="assign_class_teacher_box">
                <div class="box ">
                    <div class="box-header bg-success text-white text-center py-1">
                        <h4>Select Grade</h4>
                    </div>
              <div class="box-body">
                <div class="form-group input-control">
                    <label>Class</label>
                    <select  id="select_grade"  itemid="select_grade" name="select_grade" class="form-select select2 select2-hidden-accessible list_class" style="width: 100%;" tabindex="-1" aria-hidden="true">
                        <option value="select" >Select Class</option>
                    </select>
                    <div class="error"></div>
                </div>
                </div>
                </div>
                </div>

                <!--Section-->
                <div id="assign_class_teacher_box">
                    <div class="box ">
                        <div class="box-header bg-success text-white text-center py-1 m2-2">
                            <h4>Select Section</h4>
                        </div>
                       <div class="box-body">

                <div class="form-group input-control">
                    <label>Section</label>
                    <select id="letter_grade_id" name ="letter_grade_id" class="form-select " style="width: 100%;" tabindex="-1" aria-hidden="true">
                      <option value="select" >Select Section</option>
                    </select>
                    <div class="error"></div>
                </div>
                        
                <div id="student_select"  name="student_select">
                </div>
                 </div>
                </div>
                </div>
                 
            <br>
            <div class="form-group has-feedback mt-12">
                <button class="btn btn-success" id="register" >Link Student with Family </button>
            </div> 
        </form>
      </div>
     
     
    </div>
       
   
        </div>
          
         </div>
    </div>
    
</section>
</div>
<script src="https://cdn.jsdelivr.net/gh/habibmhamadi/multi-select-tag@3.1.0/dist/js/multi-select-tag.js"></script>
<script src="js/virtual-select.min.js"></script>

<script>
$( document ).ready(async function() {
    // get family for link
                   const sections= await fetch("/api/family/all-family-link",{
                                    method:"GET"
                                })
                        const family_data=await sections.json()
                       
                            // Clear existing options and add new options
                            let studentOptions=[]
                           let studentJsonObject={}
                           family_data.data.forEach(student => {
                            studentJsonObject['label']=student.label
                            studentJsonObject['value']=student.value
                            studentOptions.push(studentJsonObject)
                            studentJsonObject={}
                        }); 
                        VirtualSelect.init({
                        ele: '#family_select',
                        options:studentOptions,
                        search: true,
                        searchGroup: false, // Include group title for searching
                        searchByStartsWith: false, // Search options by startsWith() method
                        placeholder:"Select Family"
                        });

            var myvirtualselect=VirtualSelect.init({
                        ele: '#student_select',
                        search: true,
                        multiple: true,
                        searchGroup: false, // Include group title for searching
                        searchByStartsWith: false, // Search options by startsWith() method
                        placeholder:"Select student"
                        });
                
//    get all grades
        const select=document.getElementById("select_grade")
        const student_select=document.getElementById("student_select")
        const grades= await fetch("/api/grade/all",{
                method:"GET"
        })
            const data=await grades.json()
            data.data.forEach(grade => {
                const option=document.createElement('option')
                option.value=grade.grade
                option.text=grade.grade
                select.appendChild(option)
            });

            // fetch all section when the grade class is changed
            $("#select_grade").on("change",async function(){
                var selectedGrade=$(this).val().trim();
                if(selectedGrade!='select'){
                  const section_grade=document.getElementById("letter_grade_id")
                   const sections= await fetch("/api/letter-grade/section-of-grade/"+selectedGrade,{
                                    method:"GET"
                                })
                        const data=await sections.json()
                        section_grade.innerHTML=''
                        const optionElement = document.createElement('option');
                        document.querySelector('#student_select').setOptions([]);
                        optionElement.text = 'Select Section';
                        optionElement.value = 'select';
                        section_grade.appendChild(optionElement)
                        data.data.forEach(section => {
                            const option=document.createElement('option')
                            option.value=section.id
                            option.text=section.letter
                            section_grade.appendChild(option)
                        });
                       }
                     })
// fetch all students
        const select_grade=document.getElementById("select_grade")
        $("#letter_grade_id").on("change",async function(){
            var selectedSection=$(this).val().trim();
                if(selectedSection!='select' && select_grade.value!='select'){
                    // console.log(selectedSection)
             const sections= await fetch(`/api/student/all-student-link?grade=${select_grade.value} &section=${selectedSection}`,{
                                    method:"GET"
                                })
                        const data=await sections.json()
                        document.querySelector('#student_select').setOptions([]);
                            // Clear existing options and add new options
                            let studentOptions=[]
                           let studentJsonObject={}
                           if(data.data){
                            data.data.forEach(student => {
                            studentJsonObject['label']=student.label
                            studentJsonObject['value']=student.value
                            studentOptions.push(studentJsonObject)
                            studentJsonObject={}
                               });
                               document.querySelector('#student_select').setOptions(studentOptions);
                           }

                }})

            // const select_section=document.getElementById("letter_grade_id")
            //     // const select_grade=document.getElementById("select_grade")
            //     const select_student=document.getElementById("student_select")
            // if(select_section.value=='select' && select_grade.value=='select')
            // {
            //     const sections= await fetch("/api/student/all-student-link",{
            //                         method:"GET"
            //                     })
            //             const data=await sections.json()
            //                 // Clear existing options and add new options
            //                 let studentOptions=[]
            //                let studentJsonObject={}
            //             data.data.forEach(student => {
            //                 studentJsonObject['label']=student.label
            //                 studentJsonObject['value']=student.value
            //                 studentOptions.push(studentJsonObject)
            //                 studentJsonObject={}
                            
            //             });
            //             console.log(studentOptions)
                         
            //             document.querySelector('#student_select').setOptions(studentOptions);
                        
            //             // VirtualSelect.init({
            //             // ele: '#student_select',
            //             // options:studentOptions,
            //             // search: true,
            //             // multiple: true,
            //             // searchGroup: false, // Include group title for searching
            //             // searchByStartsWith: false, // Search options by startsWith() method
            //             // placeholder:"Select student"
            //             // });
            //             }
                   })
                    
        

    // form submition here
const form_fam_stud_link=document.getElementById("fam_stud_link")
fam_stud_link.addEventListener("submit",async(e)=>{
    e.preventDefault()
    var data = new FormData(form_fam_stud_link);
        var formDataObj = {};
        for (var [key, value] of data) {
            formDataObj[key] = value;
            }
        if(formDataObj['family_select']==''){
            Swal.fire({
                      icon: "error",
                      title: "Please select family",
                      text: '',
                    });
        }
        else if(formDataObj['student_select']==''){
            Swal.fire({
                      icon: "error",
                      title: "Please select Student",
                      text: '',
                    });
        }
        else{
         Swal.fire({
            title: "Are you sure?",
            text: `You want to link this family with this student`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, I want to link them!"
            }).then((result) => {
            if (result.isConfirmed) {
                const fam_stud_data={"family_id":formDataObj['family_select'],"student_id":formDataObj['student_select']}
                // send data
                $('#register').prop('disabled', true);
                    $.ajax({
                        url: "/api/family-student/register",
                        type: "POST",
                        data: fam_stud_data,
                        datatype: "json",
                        success: function(resp) 
                        {
                        $('#register').prop('disabled', false);
                        form_fam_stud_link.reset();
                        Swal.fire({
                            title: " Family student Link!",
                            text: "Your family studnet link success.",
                            icon: "success"
                            });
                        
                        },
                        error: function(xhr, status, error){
                        $('#register').prop('disabled', false);
                        form_fam_stud_link.reset();
                        Swal.fire({
                                icon: "error",
                                title: xhr.responseJSON.error,
                                text: '',
                                });
                               }  });
                                }
                                });
                                }
                                })
</script>
   <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
   <script src="js/jquery-3.3.1.slim.min.js"></script>
   <script src="js/popper.min.js"></script>
   <script src="js/bootstrap.min.js"></script>
   <script src="js/jquery-3.3.1.min.js"></script>
  
  
  <script type="text/javascript">
       $(document).ready(function(){
	      $(".xp-menubar").on('click',function(){
		    $("#sidebar").toggleClass('active');
			$("#content").toggleClass('active');
		  });
		  
		  $('.xp-menubar,.body-overlay').on('click',function(){
		     $("#sidebar,.body-overlay").toggleClass('show-nav');
		  });
	   });
  </script>
  </body>
  
  </html>







